from pprint import pprint

tables = [
"""
+----------+----------------+----------+-----------+
| Vorwahl  | Telefonnummer  | Vorname  | Nachname  |
+----------+----------------+----------+-----------+
| 0511     | 1548592        | Anna     | Eimer     |
| 069      | 5777120        | B.       | Schaufel  |
| 069      | 5777120        | C.       | Besen     |
| +49      | 15198524711    | D.       | Hammer    |
+----------+----------------+----------+-----------+
""",
"""
+------------+------+------+------+------+------+--------+--------+--------+
| Eingabe    | W0A  | W0B  | R1A  | R2B  | W1B  | W2B    | R∞A    | R∞B    |
+------------+------+------+------+------+------+--------+--------+--------+
| Zeit       | 0    | 1    | 2    | 3    | 4    | ∞      |        |        |
+------------+------+------+------+------+------+--------+--------+--------+
| R(A)       | 0    |      | 1    |      |      |        | ∞      |        |
+------------+------+------+------+------+------+--------+--------+--------+
| W(A)       | 0    |      |      |      | ABORT|        | ∞      |        |
+------------+------+------+------+------+------+--------+--------+--------+
| R(B)       |      | 0    |      | 2    |      |        |        | ∞      |
+------------+------+------+------+------+------+--------+--------+--------+
| W(B)       |      | 0    |      |      |      | 2      |        | ∞      |
+------------+------+------+------+------+------+--------+--------+--------+
""",
"""
+------+-------------+---------------+---------------+
| Item | ItemID (PK) | Name          | Hersteller    |
+------+-------------+---------------+---------------+
|      | 1001        | XCT 34E       | Robi-Elektrik |
|      | 1002        | Px 3-01 Light | Xiaotuling    |
|      | 1003        | Bolt v01      | SAD           |
+------+-------------+---------------+---------------+
""",
"""
+-----------+-----------+----------------+--------+
| Lieferung | Item (PK) | Lieferant (PK) | Menge  |
+-----------+-----------+----------------+--------+
|           | 1001      | Logerando      | 100    |
|           | 1002      | ULS            | 3000   |
|           | 1003      | Logerando      | 25000  |
|           | 1001      | ULS            | 250    |
+-----------+-----------+----------------+--------+
""",
"""
+-----------+----------------+-----------+---------+--------+---------------+
| Lieferant | Name (PK)      | Straße    | Nummer  | PLZ    | Ort           |
+-----------+----------------+-----------+---------+--------+---------------+
|           | Logerando      | Steinweg  | 3       | 12345  | Wegstein      |
|           | ULS            | Stadtstr  | 123     | 44044  | Straßenstadt  |
+-----------+----------------+-----------+---------+--------+---------------+
""",
"""
+----------------+---------+-------+-------+-------+-----------+---------------+
| Eingabe        | W0A W0B | W1B   | R2B   | W2A   | W1A       | RinfA RinfB   |
+----------------+---------+-------+-------+-------+-----------+---------------+
| Zeit           | 0       | 1     | 2     | 3     | 4         | inf           |
+----------------+---------+-------+-------+-------+-----------+---------------+
| RA             | 0       |       |       |       | -         | inf           |
+----------------+---------+-------+-------+-------+-----------+---------------+
| WA             | 0       |       |       | 2     | DO NOTHING| inf           |
+----------------+---------+-------+-------+-------+-----------+---------------+
| RB             | 0       |       | 2     |       |           | inf           |
+----------------+---------+-------+-------+-------+-----------+---------------+
| WB             | 0       | 1     |       |       |           | inf           |
+----------------+---------+-------+-------+-------+-----------+---------------+
""",
"""
+----------------+---------+-------+-------+-------+-------+---------------+
| Eingabe        | W0A W0B | W1B   | R2A   | W2A   | R1A   | RinfA RinfB   |
+----------------+---------+-------+-------+-------+-------+---------------+
| Zeit           | 0       | 1     | 2     | 3     | 4     | inf           |
+----------------+---------+-------+-------+-------+-------+---------------+
| RA             | 0       |       |       |       | ABORT | inf           |
+----------------+---------+-------+-------+-------+-------+---------------+
| WA             | 0       |       |       | 2     |       | inf           |
+----------------+---------+-------+-------+-------+-------+---------------+
| RB             | 0       |       | 2     |       |       | inf           |
+----------------+---------+-------+-------+-------+-------+---------------+
| WB             | 0       | 1     |       |       |       | inf           |
+----------------+---------+-------+-------+-------+-------+---------------+
"""
]

def sort_table(table, columns):
    """In-place sort function for ascii_table_parser.

    Args:
        table (list(dict())): parsed table
        columns (str): keyset of table
    """
    table.sort(key=lambda row: tuple(row[col] for col in sorted(columns))) # sort rows(dicts) after column (key) (sort model)

def ascii_table_parser(table):
    """This function transforms ASCII tables into data structure table representations

    Args:
        table (string): ASCII table

    Returns:
        (List): Pythonn table representation
    """
    table = table.strip()
    table = [line for line in table.splitlines() if any(c.isalnum() for c in line)]
    #table = [line for line in table.splitlines() if "+" not in line]
  
    header = table[0].replace(" ", "").strip("|").split("|")
    content = table [1:]
    parsed_table = []
    
    for row in content:
        filled_row = []
        row = row.strip("|").split("|")
        for cell in row:
            if cell.strip() != "":
                filled_row.append(cell.strip())
            else:
                cell = "-"
                filled_row.append(cell)
        parsed_table.append(dict(zip(header, filled_row)))
    
    sort_table(parsed_table, parsed_table[0].keys())
    return parsed_table

# For testing purposes
# for i in range(len(tables)):
#     print(i)
#     print(ascii_table_parser(tables[i]))
#     print("\n")
